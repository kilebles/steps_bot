import re
import asyncio
from contextlib import suppress
from aiogram.types import Message, ReplyKeyboardRemove

from app.steps_bot.presentation.keyboards.simple_kb import phone_request_kb, main_menu_kb


def is_valid_email(text: str) -> bool:
    return bool(re.fullmatch(r'[^@\s]+@[^@\s]+\.[a-zA-Z0-9]+', text.strip()))


async def send_temp_warning(message: Message, text: str, delay: float = 3.0):
    warn = await message.answer(text)
    async def auto_delete():
        await asyncio.sleep(delay)
        with suppress(Exception):
            await warn.delete()
    asyncio.create_task(auto_delete())


async def registration_dialog(message: Message):
    # TODO: message answer –ø–æ–¥—Ç—è–≥–∏–≤–∞—Ç—å –∏–∑ –±–¥, —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–æ–º–º–∏—Ç–∏—Ç—å –≤ –±–¥
    
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, —ç—Ç–æ steps_bot', reply_markup=phone_request_kb)
    name = message.from_user.first_name

    while True:
        msg: Message = yield
        if msg.contact and msg.contact.phone_number:
            phone = msg.contact.phone_number
            break
        await send_temp_warning(msg, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üì≤ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"')

    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:', reply_markup=ReplyKeyboardRemove())

    while True:
        msg: Message = yield
        if is_valid_email(msg.text):
            email = msg.text.strip()
            break
        await send_temp_warning(msg, '‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email')

    result = (
        f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ step_bot, {name}!\n–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª–∏—Å—å!\n\n"
        f"üìß Email: {email}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n\n"
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞ ..."
    )
    await message.answer(result, reply_markup=main_menu_kb)
