# Generated by Django 5.2.3 on 2025-07-01 20:05

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'catalog_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=100, unique=True, verbose_name='Ключ')),
                ('text', models.TextField(verbose_name='Текст')),
                ('media_type', models.CharField(choices=[('none', 'Нет'), ('photo', 'Фото'), ('video', 'Видео')], default='none', max_length=10, verbose_name='Тип медиа')),
                ('telegram_file_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram file_id')),
                ('media_url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='URL медиа')),
            ],
            options={
                'verbose_name': 'Описание',
                'verbose_name_plural': 'Описания',
                'db_table': 'contents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название семьи')),
                ('balance', models.IntegerField(verbose_name='Баланс')),
                ('step_count', models.IntegerField(verbose_name='Шаги')),
            ],
            options={
                'verbose_name': 'Семья',
                'verbose_name_plural': 'Семьи',
                'db_table': 'families',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyInvitation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inviter_id', models.BigIntegerField(verbose_name='Пригласил (User ID)')),
                ('invitee_id', models.BigIntegerField(verbose_name='Кого пригласили (User ID)')),
                ('status', models.CharField(max_length=10, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Приглашение в семью',
                'verbose_name_plural': 'Приглашения в семью',
                'db_table': 'family_invitations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slug', models.CharField(max_length=100, unique=True, verbose_name='Ключ')),
                ('question', models.CharField(max_length=255, verbose_name='Вопрос')),
                ('answer', models.TextField(verbose_name='Ответ')),
                ('media_type', models.CharField(choices=[('none', 'Нет'), ('photo', 'Фото'), ('video', 'Видео')], default='none', max_length=10, verbose_name='Тип медиа')),
                ('telegram_file_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram file_id')),
                ('media_url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='URL медиа')),
            ],
            options={
                'verbose_name': 'FAQ-пункт',
                'verbose_name_plural': 'FAQ-пункты',
                'db_table': 'faq_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('new', 'Новый'), ('paid', 'Оплачен'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен')], default='new', max_length=10, verbose_name='Статус')),
                ('total_price', models.IntegerField(verbose_name='Баллы')),
                ('cdek_uuid', models.CharField(blank=True, max_length=64, null=True, verbose_name='UUID СДЭК')),
                ('track_code', models.CharField(blank=True, max_length=32, null=True, verbose_name='Трек')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('qty', models.IntegerField(default=1, verbose_name='Кол-во')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
                'db_table': 'order_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=120, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('price', models.IntegerField(verbose_name='Цена, баллы')),
                ('media_type', models.CharField(choices=[('none', 'Нет'), ('photo', 'Фото'), ('video', 'Видео')], default='none', max_length=10, verbose_name='Тип медиа')),
                ('telegram_file_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telegram file_id')),
                ('media_url', models.CharField(blank=True, max_length=1024, null=True, verbose_name='URL медиа')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TemperatureCoefficient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('walk_form', models.CharField(choices=[('stroller', 'С коляской'), ('dog', 'С собакой'), ('stroller_dog', 'С коляской и собакой')], max_length=20, verbose_name='Форма прогулки')),
                ('min_temp_c', models.SmallIntegerField(verbose_name='Мин °C')),
                ('max_temp_c', models.SmallIntegerField(verbose_name='Макс °C')),
                ('coefficient', models.SmallIntegerField(verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Температурная надбавка',
                'verbose_name_plural': 'Температурные надбавки',
                'db_table': 'temperature_coefficients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='Telegram ID')),
                ('username', models.CharField(unique=True, verbose_name='username')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('balance', models.IntegerField(default=0, verbose_name='Баланс')),
                ('step_count', models.IntegerField(default=0, verbose_name='Шаги')),
                ('role', models.CharField(choices=[('user', 'Пользователь'), ('admin', 'Админ')], default='user', max_length=10, verbose_name='Роль')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Обновлён')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WalkFormCoefficient',
            fields=[
                ('walk_form', models.CharField(choices=[('stroller', 'С коляской'), ('dog', 'С собакой'), ('stroller_dog', 'С коляской и собакой')], max_length=20, primary_key=True, serialize=False, verbose_name='Форма прогулки')),
                ('coefficient', models.SmallIntegerField(verbose_name='Коэффициент')),
            ],
            options={
                'verbose_name': 'Форма прогулки',
                'verbose_name_plural': 'Формы прогулки',
                'db_table': 'walk_form_coefficients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='core.user')),
                ('full_name', models.CharField(max_length=120, verbose_name='ФИО')),
                ('phone', models.CharField(max_length=20, verbose_name='Телефон')),
                ('city', models.CharField(max_length=60, verbose_name='Город')),
                ('street', models.CharField(max_length=120, verbose_name='Улица, дом, кв.')),
                ('postcode', models.CharField(max_length=10, verbose_name='Индекс')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
                'db_table': 'user_addresses',
                'managed': False,
            },
        ),
    ]
